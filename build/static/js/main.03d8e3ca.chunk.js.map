{"version":3,"sources":["components/Person.js","components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/personHelpers.js","App.js","reportWebVitals.js","index.js"],"names":["Person","props","person","handleDelete","id","name","number","type","onClick","Persons","persons","filterName","map","personName","toLowerCase","filterEntry","indexOf","PersonForm","newName","newNumber","handleInputChange","handleFormSubmit","onSubmit","value","onChange","Filter","handleFilterChange","Notification","message","status","className","baseUrl","axios","get","then","response","data","newObject","post","prevObj","newObj","put","delete","App","useState","setPersons","setNewName","setNewNumber","setFilterName","messageNotification","setMessageNotification","handleNotification","personObj","setTimeout","useEffect","personHelpers","e","target","preventDefault","newPerson","catch","err","currentPerson","find","res","error","window","confirm","deletedPerson","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03d8e3ca.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Person(props) {\r\n\r\n    const { person, handleDelete } = props;\r\n    const { id, name, number } = person;\r\n\r\n    return (\r\n        <div>\r\n            <span key={name}>{name} <span>{number}</span></span>\r\n            <button type=\"button\" onClick={() => handleDelete(id, name)}>Delete</button>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport Person from \"./Person\";\r\n\r\nexport default function Persons(props) {\r\n\r\n    const { persons, filterName, handleDelete } = props;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Numbers</h2>\r\n            {\r\n                persons.map(person => {\r\n                    const personName = person.name.toLowerCase();\r\n                    const filterEntry = filterName.toLowerCase();\r\n\r\n                    // Check if filterEntry is found on personName\r\n                    if (personName.indexOf(filterEntry) > -1) {\r\n                        return <Person key={person.id} person={person} handleDelete={handleDelete} />;\r\n                    } else {\r\n                        return null;\r\n                    }\r\n\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default function PersonForm(props) {\r\n    const { newName, newNumber, handleInputChange, handleFormSubmit } = props;\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleFormSubmit}>\r\n                <div>\r\n                    Name: <input type=\"text\" value={newName} name=\"name\" onChange={handleInputChange} />\r\n                </div>\r\n                <div>\r\n                    Number: <input type=\"text\" value={newNumber} name=\"number\" onChange={handleInputChange} />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">Add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default function Filter(props) {\r\n    const { filterName, handleFilterChange } = props;\r\n\r\n    return (\r\n        <div>\r\n            Filter shown with <input type=\"text\" value={filterName} onChange={handleFilterChange} />\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default function Notification(props) {\r\n    const { status, message } = props.message;\r\n\r\n    if (message === null) {\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <div className={status === \"success\" || status === \"updateSuccess\" ? \"success\" : \"error\"}>\r\n            {message}\r\n        </div>\r\n    );\r\n}","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst updatePerson = (prevObj, newObj) => {\r\n    return axios.put(`${baseUrl}/${prevObj.id}`, newObj);\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`);\r\n}\r\n\r\nexport default { getAll, create, updatePerson, deletePerson };","import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport Persons from \"./components/Persons\";\nimport PersonForm from \"./components/PersonForm\";\nimport Filter from \"./components/Filter\";\nimport Notification from \"./components/Notification\";\nimport personHelpers from \"./services/personHelpers\";\n\n// npx json-server --port 3001 --watch db.json\n\nexport default function App() {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filterName, setFilterName] = useState('');\n  const [messageNotification, setMessageNotification] = useState({ status: null, message: null });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    name === \"name\" ? setNewName(value) : setNewNumber(value);\n  }\n\n  // currentPerson is CONFLICTING here\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n\n    // const currentPerson = persons.find(person => person.name === newName);\n\n    // // If currentPerson is found\n    // if (currentPerson) {\n\n    //   if (window.confirm(`${newName} is already added to phonebook, would you like to replace the old number with a new one?`)) {\n\n    //     personHelpers.updatePerson(currentPerson, { ...currentPerson, number: newNumber })\n    //       .then(response => {\n    //         // If ID matches, place returned object to current index, else, return original object from array instead.\n    //         handleNotification(\"updateSuccess\", currentPerson);\n    //         setPersons(persons.map(person => person.id === response.data.id ? response.data : person));\n    //       })\n    //       .catch(error => {\n    //         handleNotification(\"error\", currentPerson);\n    //       });\n\n    //   };\n\n    // } else {\n    personHelpers.create(newPerson)\n      .then(response => {\n        handleNotification(\"success\", response);\n        setPersons([...persons, response]);\n\n        setNewName('');\n        setNewNumber('');\n      })\n      .catch(err => {\n        const currentPerson = persons.find(person => person.name === newName);\n        personHelpers.updatePerson(currentPerson, newPerson)\n          .then(res => {\n            // If ID matches, place returned object to current index, else, return original object from array instead.\n            handleNotification(\"updateSuccess\", currentPerson);\n            setPersons(persons.map(person => person.id === res.data.id ? res.data : person));\n          })\n          .catch(error => {\n            handleNotification(\"error\", currentPerson);\n          });;\n      });\n\n    setNewName('');\n    setNewNumber('');\n\n  }\n\n  const handleFilterChange = (e) => {\n    const { value } = e.target;\n\n    setFilterName(value);\n  }\n\n  const handleDelete = (id, name) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      personHelpers.deletePerson(id)\n        .then(deletedPerson => {\n          handleNotification(\"deleted\", deletedPerson);\n          setPersons(persons.filter(person => person.id !== id));\n        });\n    }\n  }\n\n  const handleNotification = (status, personObj) => {\n    if (status === \"success\") {\n      setMessageNotification({ status, message: `Added ${personObj.name}` });\n    } else if (status === \"deleted\") {\n      setMessageNotification({ status, message: `Deleted ${personObj.data.name}` });\n    } else if (status === \"error\") {\n      setMessageNotification({ status, message: `Person ${personObj.name} was already removed from server` });\n    } else if (status === \"updateSuccess\") {\n      setMessageNotification({ status, message: `Successfully updated ${personObj.name}` });\n    }\n\n    setTimeout(() => {\n      setMessageNotification({ status: null, message: null });\n    }, 3000);\n  }\n\n  useEffect(() => {\n    personHelpers\n      .getAll()\n      .then(response => setPersons(response));\n  }, []);\n\n  return (\n    <div className=\"App\">\n\n      <h2>Phonebook</h2>\n      <Notification message={messageNotification} />\n\n      <Filter filterName={filterName} handleFilterChange={handleFilterChange} />\n\n      <h2>Add New Contact</h2>\n\n      <PersonForm newName={newName} newNumber={newNumber} handleInputChange={handleInputChange} handleFormSubmit={handleFormSubmit} />\n\n      <Persons persons={persons} filterName={filterName} handleDelete={handleDelete} />\n\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}